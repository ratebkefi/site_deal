<?php

namespace Proxies\__CG__\Back\ContractBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Annexe extends \Back\ContractBundle\Entity\Annexe implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'id', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'object', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'minCoupon', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'nbrGratuite', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'quota', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'booking', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'remark', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'vedio', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'image', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'releaseDate', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'dcr', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'fixedCommission', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'variableCommission', 'planning', 'protocol', 'reference', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'agent', 'responserequiredinfo');
        }

        return array('__isInitialized__', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'id', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'object', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'minCoupon', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'nbrGratuite', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'quota', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'booking', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'remark', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'vedio', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'image', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'releaseDate', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'dcr', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'fixedCommission', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'variableCommission', 'planning', 'protocol', 'reference', '' . "\0" . 'Back\\ContractBundle\\Entity\\Annexe' . "\0" . 'agent', 'responserequiredinfo');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Annexe $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setObject($object)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObject', array($object));

        return parent::setObject($object);
    }

    /**
     * {@inheritDoc}
     */
    public function getObject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObject', array());

        return parent::getObject();
    }

    /**
     * {@inheritDoc}
     */
    public function setMinCoupon($minCoupon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMinCoupon', array($minCoupon));

        return parent::setMinCoupon($minCoupon);
    }

    /**
     * {@inheritDoc}
     */
    public function getMinCoupon()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinCoupon', array());

        return parent::getMinCoupon();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbrGratuite($nbrGratuite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbrGratuite', array($nbrGratuite));

        return parent::setNbrGratuite($nbrGratuite);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbrGratuite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbrGratuite', array());

        return parent::getNbrGratuite();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuota($quota)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuota', array($quota));

        return parent::setQuota($quota);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuota()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuota', array());

        return parent::getQuota();
    }

    /**
     * {@inheritDoc}
     */
    public function setBooking($booking)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBooking', array($booking));

        return parent::setBooking($booking);
    }

    /**
     * {@inheritDoc}
     */
    public function getBooking()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBooking', array());

        return parent::getBooking();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemark($remark)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemark', array($remark));

        return parent::setRemark($remark);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemark()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemark', array());

        return parent::getRemark();
    }

    /**
     * {@inheritDoc}
     */
    public function setReleaseDate($releaseDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReleaseDate', array($releaseDate));

        return parent::setReleaseDate($releaseDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getReleaseDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReleaseDate', array());

        return parent::getReleaseDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setFixedCommission($fixedCommission)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFixedCommission', array($fixedCommission));

        return parent::setFixedCommission($fixedCommission);
    }

    /**
     * {@inheritDoc}
     */
    public function getFixedCommission()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFixedCommission', array());

        return parent::getFixedCommission();
    }

    /**
     * {@inheritDoc}
     */
    public function setVariableCommission($variableCommission)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVariableCommission', array($variableCommission));

        return parent::setVariableCommission($variableCommission);
    }

    /**
     * {@inheritDoc}
     */
    public function getVariableCommission()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVariableCommission', array());

        return parent::getVariableCommission();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlanning(\Back\PlanningBundle\Entity\Planning $planning = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlanning', array($planning));

        return parent::setPlanning($planning);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlanning()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlanning', array());

        return parent::getPlanning();
    }

    /**
     * {@inheritDoc}
     */
    public function setProtocol(\Back\ContractBundle\Entity\Protocol $protocol = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProtocol', array($protocol));

        return parent::setProtocol($protocol);
    }

    /**
     * {@inheritDoc}
     */
    public function getProtocol()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProtocol', array());

        return parent::getProtocol();
    }

    /**
     * {@inheritDoc}
     */
    public function addReference(\Back\ContractBundle\Entity\Reference $reference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReference', array($reference));

        return parent::addReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReference(\Back\ContractBundle\Entity\Reference $reference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReference', array($reference));

        return parent::removeReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', array());

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setAgent(\User\UserBundle\Entity\User $agent = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAgent', array($agent));

        return parent::setAgent($agent);
    }

    /**
     * {@inheritDoc}
     */
    public function getAgent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAgent', array());

        return parent::getAgent();
    }

    /**
     * {@inheritDoc}
     */
    public function addResponserequiredinfo(\Back\PlanningBundle\Entity\ResponseRequiredInfo $responserequiredinfo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addResponserequiredinfo', array($responserequiredinfo));

        return parent::addResponserequiredinfo($responserequiredinfo);
    }

    /**
     * {@inheritDoc}
     */
    public function removeResponserequiredinfo(\Back\PlanningBundle\Entity\ResponseRequiredInfo $responserequiredinfo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeResponserequiredinfo', array($responserequiredinfo));

        return parent::removeResponserequiredinfo($responserequiredinfo);
    }

    /**
     * {@inheritDoc}
     */
    public function getResponserequiredinfo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResponserequiredinfo', array());

        return parent::getResponserequiredinfo();
    }

    /**
     * {@inheritDoc}
     */
    public function setVedio($vedio)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVedio', array($vedio));

        return parent::setVedio($vedio);
    }

    /**
     * {@inheritDoc}
     */
    public function getVedio()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVedio', array());

        return parent::getVedio();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', array($image));

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', array());

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setDcr($dcr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDcr', array($dcr));

        return parent::setDcr($dcr);
    }

    /**
     * {@inheritDoc}
     */
    public function getDcr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDcr', array());

        return parent::getDcr();
    }

}
