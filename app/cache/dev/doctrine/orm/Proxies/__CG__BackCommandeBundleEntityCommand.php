<?php

namespace Proxies\__CG__\Back\CommandeBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Command extends \Back\CommandeBundle\Entity\Command implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'id', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'dcr', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'dpa', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'qte', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'etat', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'user', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'caisse', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'deal', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'reference', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'client', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'coupon', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'operation', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'adresse', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'poste');
        }

        return array('__isInitialized__', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'id', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'dcr', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'dpa', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'qte', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'etat', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'user', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'caisse', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'deal', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'reference', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'client', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'coupon', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'operation', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'adresse', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Command' . "\0" . 'poste');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Command $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getMacommande()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMacommande', array());

        return parent::getMacommande();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDcr($dcr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDcr', array($dcr));

        return parent::setDcr($dcr);
    }

    /**
     * {@inheritDoc}
     */
    public function getDcr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDcr', array());

        return parent::getDcr();
    }

    /**
     * {@inheritDoc}
     */
    public function setDpa($dpa)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDpa', array($dpa));

        return parent::setDpa($dpa);
    }

    /**
     * {@inheritDoc}
     */
    public function getDpa()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDpa', array());

        return parent::getDpa();
    }

    /**
     * {@inheritDoc}
     */
    public function setQte($qte)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQte', array($qte));

        return parent::setQte($qte);
    }

    /**
     * {@inheritDoc}
     */
    public function getQte()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQte', array());

        return parent::getQte();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat($etat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', array($etat));

        return parent::setEtat($etat);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', array());

        return parent::getEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\User\UserBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setCaisse(\Back\CommandeBundle\Entity\Caisse $caisse = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCaisse', array($caisse));

        return parent::setCaisse($caisse);
    }

    /**
     * {@inheritDoc}
     */
    public function getCaisse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCaisse', array());

        return parent::getCaisse();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeal(\Back\DealBundle\Entity\Deal $deal = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeal', array($deal));

        return parent::setDeal($deal);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeal', array());

        return parent::getDeal();
    }

    /**
     * {@inheritDoc}
     */
    public function setReference(\Back\ContractBundle\Entity\Reference $reference = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', array($reference));

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', array());

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setClient(\Back\CommandeBundle\Entity\Client $client = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClient', array($client));

        return parent::setClient($client);
    }

    /**
     * {@inheritDoc}
     */
    public function getClient()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClient', array());

        return parent::getClient();
    }

    /**
     * {@inheritDoc}
     */
    public function addCoupon(\Back\CommandeBundle\Entity\Coupon $coupon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCoupon', array($coupon));

        return parent::addCoupon($coupon);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCoupon(\Back\CommandeBundle\Entity\Coupon $coupon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCoupon', array($coupon));

        return parent::removeCoupon($coupon);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoupon()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoupon', array());

        return parent::getCoupon();
    }

    /**
     * {@inheritDoc}
     */
    public function addOperation(\Back\CommandeBundle\Entity\Operation $operation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOperation', array($operation));

        return parent::addOperation($operation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOperation(\Back\CommandeBundle\Entity\Operation $operation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOperation', array($operation));

        return parent::removeOperation($operation);
    }

    /**
     * {@inheritDoc}
     */
    public function getOperation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOperation', array());

        return parent::getOperation();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresse(\Back\CommandeBundle\Entity\Adress $adresse = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresse', array($adresse));

        return parent::setAdresse($adresse);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresse', array());

        return parent::getAdresse();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoste(\Main\FrontBundle\Entity\Post $poste = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoste', array($poste));

        return parent::setPoste($poste);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoste()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoste', array());

        return parent::getPoste();
    }

}
