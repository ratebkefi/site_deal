<?php

namespace Proxies\__CG__\Back\PlanningBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Planning extends \Back\PlanningBundle\Entity\Planning implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'id', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'state', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'object', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'tariff', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'ca', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'description', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'startDate', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'endDate', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'remarks', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'categoryId', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'regionId', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'defaultannexe', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'annexe', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'planninghistory', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'deal', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'agent', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'dcr');
        }

        return array('__isInitialized__', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'id', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'state', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'object', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'tariff', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'ca', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'description', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'startDate', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'endDate', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'remarks', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'categoryId', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'regionId', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'defaultannexe', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'annexe', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'planninghistory', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'deal', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'agent', '' . "\0" . 'Back\\PlanningBundle\\Entity\\Planning' . "\0" . 'dcr');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Planning $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setState($state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', array($state));

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', array());

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setObject($object)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObject', array($object));

        return parent::setObject($object);
    }

    /**
     * {@inheritDoc}
     */
    public function getObject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObject', array());

        return parent::getObject();
    }

    /**
     * {@inheritDoc}
     */
    public function setTariff($tariff)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTariff', array($tariff));

        return parent::setTariff($tariff);
    }

    /**
     * {@inheritDoc}
     */
    public function getTariff()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTariff', array());

        return parent::getTariff();
    }

    /**
     * {@inheritDoc}
     */
    public function setCa($ca)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCa', array($ca));

        return parent::setCa($ca);
    }

    /**
     * {@inheritDoc}
     */
    public function getCa()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCa', array());

        return parent::getCa();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartDate($startDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartDate', array($startDate));

        return parent::setStartDate($startDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartDate', array());

        return parent::getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndDate($endDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndDate', array($endDate));

        return parent::setEndDate($endDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndDate', array());

        return parent::getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemarks($remarks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemarks', array($remarks));

        return parent::setRemarks($remarks);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemarks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemarks', array());

        return parent::getRemarks();
    }

    /**
     * {@inheritDoc}
     */
    public function setDcr($dcr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDcr', array($dcr));

        return parent::setDcr($dcr);
    }

    /**
     * {@inheritDoc}
     */
    public function getDcr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDcr', array());

        return parent::getDcr();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategoryId(\Back\PlanningBundle\Entity\Category $categoryId = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategoryId', array($categoryId));

        return parent::setCategoryId($categoryId);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoryId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoryId', array());

        return parent::getCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegionId(\Back\PlanningBundle\Entity\Region $regionId = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegionId', array($regionId));

        return parent::setRegionId($regionId);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegionId', array());

        return parent::getRegionId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultannexe(\Back\ContractBundle\Entity\Annexe $defaultannexe = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultannexe', array($defaultannexe));

        return parent::setDefaultannexe($defaultannexe);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultannexe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultannexe', array());

        return parent::getDefaultannexe();
    }

    /**
     * {@inheritDoc}
     */
    public function addAnnexe(\Back\ContractBundle\Entity\Annexe $annexe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAnnexe', array($annexe));

        return parent::addAnnexe($annexe);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAnnexe(\Back\ContractBundle\Entity\Annexe $annexe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAnnexe', array($annexe));

        return parent::removeAnnexe($annexe);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnnexe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnnexe', array());

        return parent::getAnnexe();
    }

    /**
     * {@inheritDoc}
     */
    public function addPlanninghistory(\Back\PlanningBundle\Entity\Planninghistory $planninghistory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPlanninghistory', array($planninghistory));

        return parent::addPlanninghistory($planninghistory);
    }

    /**
     * {@inheritDoc}
     */
    public function removePlanninghistory(\Back\PlanningBundle\Entity\Planninghistory $planninghistory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePlanninghistory', array($planninghistory));

        return parent::removePlanninghistory($planninghistory);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlanninghistory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlanninghistory', array());

        return parent::getPlanninghistory();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeal(\Back\DealBundle\Entity\Deal $deal = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeal', array($deal));

        return parent::setDeal($deal);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeal', array());

        return parent::getDeal();
    }

    /**
     * {@inheritDoc}
     */
    public function setAgent(\User\UserBundle\Entity\User $agent = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAgent', array($agent));

        return parent::setAgent($agent);
    }

    /**
     * {@inheritDoc}
     */
    public function getAgent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAgent', array());

        return parent::getAgent();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

}
