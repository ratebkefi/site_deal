<?php

namespace Proxies\__CG__\Back\CommandeBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Operation extends \Back\CommandeBundle\Entity\Operation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'id', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'type', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'numCheque', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'titulaire', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'montant', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'dateEncaissement', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'commande', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'modepayement', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'user', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'caisse', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'dcr', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'daf');
        }

        return array('__isInitialized__', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'id', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'type', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'numCheque', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'titulaire', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'montant', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'dateEncaissement', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'commande', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'modepayement', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'user', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'caisse', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'dcr', '' . "\0" . 'Back\\CommandeBundle\\Entity\\Operation' . "\0" . 'daf');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Operation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumCheque($numCheque)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumCheque', array($numCheque));

        return parent::setNumCheque($numCheque);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumCheque()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumCheque', array());

        return parent::getNumCheque();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitulaire($titulaire)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitulaire', array($titulaire));

        return parent::setTitulaire($titulaire);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitulaire()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitulaire', array());

        return parent::getTitulaire();
    }

    /**
     * {@inheritDoc}
     */
    public function setMontant($montant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMontant', array($montant));

        return parent::setMontant($montant);
    }

    /**
     * {@inheritDoc}
     */
    public function getMontant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMontant', array());

        return parent::getMontant();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEncaissement($dateEncaissement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEncaissement', array($dateEncaissement));

        return parent::setDateEncaissement($dateEncaissement);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEncaissement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEncaissement', array());

        return parent::getDateEncaissement();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommande(\Back\CommandeBundle\Entity\Command $commande = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommande', array($commande));

        return parent::setCommande($commande);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommande()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommande', array());

        return parent::getCommande();
    }

    /**
     * {@inheritDoc}
     */
    public function setModepayement(\Back\CommandeBundle\Entity\PaymentMethod $modepayement = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModepayement', array($modepayement));

        return parent::setModepayement($modepayement);
    }

    /**
     * {@inheritDoc}
     */
    public function getModepayement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModepayement', array());

        return parent::getModepayement();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\User\UserBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setCaisse(\User\UserBundle\Entity\User $caisse = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCaisse', array($caisse));

        return parent::setCaisse($caisse);
    }

    /**
     * {@inheritDoc}
     */
    public function getCaisse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCaisse', array());

        return parent::getCaisse();
    }

    /**
     * {@inheritDoc}
     */
    public function setDcr($dcr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDcr', array($dcr));

        return parent::setDcr($dcr);
    }

    /**
     * {@inheritDoc}
     */
    public function getDcr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDcr', array());

        return parent::getDcr();
    }

    /**
     * {@inheritDoc}
     */
    public function setDaf(\User\UserBundle\Entity\User $daf = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDaf', array($daf));

        return parent::setDaf($daf);
    }

    /**
     * {@inheritDoc}
     */
    public function getDaf()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDaf', array());

        return parent::getDaf();
    }

}
