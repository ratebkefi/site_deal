<?php

namespace Proxies\__CG__\Back\PageBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Banner extends \Back\PageBundle\Entity\Banner implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'id', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'name', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'link', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'dcr', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'dated', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'datef', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'act', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'media', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'zone', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'target', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'height', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'width');
        }

        return array('__isInitialized__', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'id', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'name', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'link', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'dcr', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'dated', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'datef', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'act', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'media', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'zone', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'target', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'height', '' . "\0" . 'Back\\PageBundle\\Entity\\Banner' . "\0" . 'width');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Banner $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLink($link)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLink', array($link));

        return parent::setLink($link);
    }

    /**
     * {@inheritDoc}
     */
    public function getLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLink', array());

        return parent::getLink();
    }

    /**
     * {@inheritDoc}
     */
    public function setDcr($dcr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDcr', array($dcr));

        return parent::setDcr($dcr);
    }

    /**
     * {@inheritDoc}
     */
    public function getDcr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDcr', array());

        return parent::getDcr();
    }

    /**
     * {@inheritDoc}
     */
    public function setDated($dated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDated', array($dated));

        return parent::setDated($dated);
    }

    /**
     * {@inheritDoc}
     */
    public function getDated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDated', array());

        return parent::getDated();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatef($datef)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatef', array($datef));

        return parent::setDatef($datef);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatef()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatef', array());

        return parent::getDatef();
    }

    /**
     * {@inheritDoc}
     */
    public function setAct($act)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAct', array($act));

        return parent::setAct($act);
    }

    /**
     * {@inheritDoc}
     */
    public function getAct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAct', array());

        return parent::getAct();
    }

    /**
     * {@inheritDoc}
     */
    public function setMedia($media)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMedia', array($media));

        return parent::setMedia($media);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedia', array());

        return parent::getMedia();
    }

    /**
     * {@inheritDoc}
     */
    public function setZone($zone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZone', array($zone));

        return parent::setZone($zone);
    }

    /**
     * {@inheritDoc}
     */
    public function getZone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZone', array());

        return parent::getZone();
    }

    /**
     * {@inheritDoc}
     */
    public function setTarget($target)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTarget', array($target));

        return parent::setTarget($target);
    }

    /**
     * {@inheritDoc}
     */
    public function getTarget()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTarget', array());

        return parent::getTarget();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeight($height)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeight', array($height));

        return parent::setHeight($height);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeight', array());

        return parent::getHeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setWidth($width)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWidth', array($width));

        return parent::setWidth($width);
    }

    /**
     * {@inheritDoc}
     */
    public function getWidth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWidth', array());

        return parent::getWidth();
    }

}
