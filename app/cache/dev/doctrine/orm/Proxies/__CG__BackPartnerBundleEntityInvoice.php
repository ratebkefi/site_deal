<?php

namespace Proxies\__CG__\Back\PartnerBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Invoice extends \Back\PartnerBundle\Entity\Invoice implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array('path' => NULL);



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        unset($this->path);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', array($name));

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', array($name, $value));

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', array($name));

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'id', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'numfacture', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'dcr', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'dvir', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'etat', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'payement', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'ca', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'comFixe', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'comVariable', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'virement', 'coupon', 'user', 'deal', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'agent', 'file', 'path');
        }

        return array('__isInitialized__', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'id', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'numfacture', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'dcr', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'dvir', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'etat', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'payement', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'ca', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'comFixe', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'comVariable', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'virement', 'coupon', 'user', 'deal', '' . "\0" . 'Back\\PartnerBundle\\Entity\\Invoice' . "\0" . 'agent', 'file');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Invoice $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->path);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function upload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'upload', array());

        return parent::upload();
    }

    /**
     * {@inheritDoc}
     */
    public function getAbsolutePath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbsolutePath', array());

        return parent::getAbsolutePath();
    }

    /**
     * {@inheritDoc}
     */
    public function getWebPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebPath', array());

        return parent::getWebPath();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumfacture($num)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumfacture', array($num));

        return parent::setNumfacture($num);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumfacture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumfacture', array());

        return parent::getNumfacture();
    }

    /**
     * {@inheritDoc}
     */
    public function setDcr($dcr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDcr', array($dcr));

        return parent::setDcr($dcr);
    }

    /**
     * {@inheritDoc}
     */
    public function getDcr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDcr', array());

        return parent::getDcr();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat($etat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', array($etat));

        return parent::setEtat($etat);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', array());

        return parent::getEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function setCa($ca)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCa', array($ca));

        return parent::setCa($ca);
    }

    /**
     * {@inheritDoc}
     */
    public function getCa()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCa', array());

        return parent::getCa();
    }

    /**
     * {@inheritDoc}
     */
    public function setComFixe($comFixe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComFixe', array($comFixe));

        return parent::setComFixe($comFixe);
    }

    /**
     * {@inheritDoc}
     */
    public function getComFixe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComFixe', array());

        return parent::getComFixe();
    }

    /**
     * {@inheritDoc}
     */
    public function setComVariable($comVariable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComVariable', array($comVariable));

        return parent::setComVariable($comVariable);
    }

    /**
     * {@inheritDoc}
     */
    public function getComVariable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComVariable', array());

        return parent::getComVariable();
    }

    /**
     * {@inheritDoc}
     */
    public function setVirement($virement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVirement', array($virement));

        return parent::setVirement($virement);
    }

    /**
     * {@inheritDoc}
     */
    public function getVirement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVirement', array());

        return parent::getVirement();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoupon(\Back\CommandeBundle\Entity\Coupon $coupon = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoupon', array($coupon));

        return parent::setCoupon($coupon);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoupon()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoupon', array());

        return parent::getCoupon();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\User\UserBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeal(\Back\DealBundle\Entity\Deal $deal = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeal', array($deal));

        return parent::setDeal($deal);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeal', array());

        return parent::getDeal();
    }

    /**
     * {@inheritDoc}
     */
    public function addCoupon(\Back\CommandeBundle\Entity\Coupon $coupon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCoupon', array($coupon));

        return parent::addCoupon($coupon);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCoupon(\Back\CommandeBundle\Entity\Coupon $coupon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCoupon', array($coupon));

        return parent::removeCoupon($coupon);
    }

    /**
     * {@inheritDoc}
     */
    public function setAgent(\User\UserBundle\Entity\User $agent = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAgent', array($agent));

        return parent::setAgent($agent);
    }

    /**
     * {@inheritDoc}
     */
    public function getAgent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAgent', array());

        return parent::getAgent();
    }

    /**
     * {@inheritDoc}
     */
    public function setDvir($dvir)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDvir', array($dvir));

        return parent::setDvir($dvir);
    }

    /**
     * {@inheritDoc}
     */
    public function getDvir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDvir', array());

        return parent::getDvir();
    }

    /**
     * {@inheritDoc}
     */
    public function setPath($path)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPath', array($path));

        return parent::setPath($path);
    }

    /**
     * {@inheritDoc}
     */
    public function getPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPath', array());

        return parent::getPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setPayement($payement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPayement', array($payement));

        return parent::setPayement($payement);
    }

    /**
     * {@inheritDoc}
     */
    public function getPayement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayement', array());

        return parent::getPayement();
    }

}
