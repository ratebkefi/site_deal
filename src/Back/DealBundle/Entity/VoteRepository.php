<?php

namespace Back\DealBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Main\BookingBundle\Common\Tools;

/**
 * VoteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VoteRepository extends EntityRepository
{
	public function listVote($data)
	{
	$sql = "select vo ";
        $from = " from Back\DealBundle\Entity\Vote as vo,";
        $where = " where (1=1) and";
        
        if (isset($data['deal'])) {
            $where .= " vo.rating =" . $data['deal'] . " and ";
        }
        if (isset($data['partenar'])) {
            $from .= "  Back\DealBundle\Entity\Deal as deal,";
            $from .= "  Back\PlanningBundle\Entity\Planning as plan,";
            $from .= "  Back\ContractBundle\Entity\Annexe as ann,";
            $from .= "  Back\ContractBundle\Entity\Protocol as pro,";
            $where .= "  vo.rating = deal.id and";
            $where .= "  deal.planning = plan.id and";
            $where .= "  plan.defaultannexe = ann.id and";
            $where .= "  ann.protocol = pro.id and";
            $where .= " pro.user =" . $data['partenar'] . " and ";

            //$where .= " vo.act =" . $data['act'] . " and ";
        }
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where . " order by vo.createdAt DESC
          ";
        $qb = $this->getEntityManager()->createQuery($query);
        // echo $qb->getSQL(); exit;
        return $qb->getResult();
    
	}
	
    public function getNumberVoted($id){

        $qb=$this->createQueryBuilder('v')

            ->where('v.rating = :nbr')
            ->andWhere('v.act = true')
            ->setParameter('nbr', $id);
        $result =$qb->getQuery()->getResult();
        return $result;
    }

    public function listTotalCommentaire($idDeal)
    {
        $sql = "select count(vo) ";
        $from = " from Back\DealBundle\Entity\Vote as vo,";
        $where = " where (1=1) and";
        $where .= " vo.rating =" . $idDeal . " and ";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where . " order by vo.createdAt DESC ";
        $qb = $this->getEntityManager()->createQuery($query);
        return $qb->getResult()[0];

    }

    public function listTotalCommentaire1($idDeal)
    {
        $sql = "select count(vo) ";
        $from = " from Back\DealBundle\Entity\Vote as vo,";
        $where = " where (1=1) and";
        $where .= " vo.rating =" . $idDeal . " and ";
        $where .= " vo.value = 1 and";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where . " order by vo.createdAt DESC ";
        $qb = $this->getEntityManager()->createQuery($query);
        return $qb->getResult()[0];
    }

    public function listTotalCommentaire2($idDeal)
    {
        $sql = "select count(vo) ";
        $from = " from Back\DealBundle\Entity\Vote as vo,";
        $where = " where (1=1) and";
        $where .= " vo.rating =" . $idDeal . " and ";
        $where .= " vo.value = 2 and";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where . " order by vo.createdAt DESC ";
        $qb = $this->getEntityManager()->createQuery($query);
        return $qb->getResult()[0];
    }


    public function listTotalCommentaire3($idDeal)
    {
        $sql = "select count(vo) ";
        $from = " from Back\DealBundle\Entity\Vote as vo,";
        $where = " where (1=1) and";
        $where .= " vo.rating =" . $idDeal . " and ";
        $where .= " vo.value = 3 and";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where . " order by vo.createdAt DESC ";
        $qb = $this->getEntityManager()->createQuery($query);
        return $qb->getResult()[0];
    }


    public function listTotalCommentaire4($idDeal)
    {
        $sql = "select count(vo) ";
        $from = " from Back\DealBundle\Entity\Vote as vo,";
        $where = " where (1=1) and";
        $where .= " vo.rating =" . $idDeal . " and ";
        $where .= " vo.value = 4 and";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where . " order by vo.createdAt DESC ";
        $qb = $this->getEntityManager()->createQuery($query);
        return $qb->getResult()[0];
    }


    public function listTotalCommentaire5($idDeal)
    {
        $sql = "select count(vo) ";
        $from = " from Back\DealBundle\Entity\Vote as vo,";
        $where = " where (1=1) and";
        $where .= " vo.rating =" . $idDeal . " and ";
        $where .= " vo.value = 5 and";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where . " order by vo.createdAt DESC ";
        $qb = $this->getEntityManager()->createQuery($query);
        return $qb->getResult()[0];
    }


}
