<?php

namespace Back\CommandeBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Back\DashBundle\Common\Tools;
use Doctrine\ORM\Tools\Pagination\Paginator;
/**
 * CommandRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommandRepository extends EntityRepository
{
 public function nombreCommandeParClient($client)
    {
        //and cp.recu=1
        $sql = "select count(cmd) as nombre ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd,";
        $where = " where cmd.etat=1 and";
        $where .= " cmd.client =" . $client . " and ";

        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where;
        $qb = $this->getEntityManager()->createQuery($query);

        $result = $qb->getResult();
        return $result[0]['nombre'];
    }




	
public function getListDealValider($client)
{
$query = $this->getEntityManager()
            ->createQuery("select cmd  from
                            Back\CommandeBundle\Entity\Coupon as coupon ,
                            Back\CommandeBundle\Entity\Command as cmd 
                            where  coupon.command=cmd.id
                            and coupon.vendu =3
                            and cmd.client =  '" . $client . "'

                            ");

//echo $query->getSQL();
        return $query->getResult();
}
public function listCommandeVendu($idDeal)
    {
	
        $query = $this->getEntityManager()
            ->createQuery("select cmd  from
                            Back\CommandeBundle\Entity\Coupon as coupon ,
                            Back\CommandeBundle\Entity\Command as cmd 
                            where  coupon.command=cmd.id
                            and coupon.vendu =2
                            and cmd.deal =  '" . $idDeal . "'

                            ");

//echo $query->getSQL();
        return $query->getResult();

    }

    public function getNombreCommandePaye($date,$partenaire,$deal)
{

    $sql = "select cmd ";
    $from = " from Back\CommandeBundle\Entity\Command as cmd,";
    $from .= "  Back\ContractBundle\Entity\Reference as ref,";
    $from .= "  Back\ContractBundle\Entity\Annexe as ann,";
    $from .= "  Back\ContractBundle\Entity\Protocol as pro,";
    $where = " where cmd.reference =ref.id and";
    $where .= "  ref.annexe =ann.id and";
    $where .= "  ann.protocol =pro.id and";
    $where .= "  cmd.etat =1 and";
    $where .= "  cmd.dcr <='".$date."%' and";
    if($partenaire)
        $where .= "  pro.user =".$partenaire." and";
    if($deal)
        $where .= "  cmd.deal =".$deal." and";
    $where = substr($where, 0, -4);
    $from = substr($from, 0, -1);
    $query = $sql . $from . $where . " group by cmd.id ";
    $qb = $this->getEntityManager()->createQuery($query);

    return count($qb->getResult()) ;
}

	public function getListCommandeEnAttente()
    {
	$dt = new \DateTime('+1 hours');
        $sql = "select cmd ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd,";
        $from .= "  Back\ContractBundle\Entity\Reference as ref,";
        $from .= "  Back\ContractBundle\Entity\Annexe as ann,";
        $from .= "  Back\ContractBundle\Entity\Protocol as pro,";
        $where = " where cmd.reference =ref.id and";
        $where .= "  ref.annexe =ann.id and";
        $where .= "  ann.protocol =pro.id and";
        $where .= "  cmd.etat =0 and";
        $where .= "  cmd.dcr  >='" . $dt->format('Y-m-d H:i:s') . " ' and" ;
        //$where .= " DATE_SUB(cmd.deal.planning.endDate , 1, 'DAY') >=  '" . $date . "'   and ";

        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where . " group by cmd.client order BY cmd.id DESC";
        $qb = $this->getEntityManager()->createQuery($query);
        // echo $qb->getSQL(); exit;
        return $qb->getResult() ;
    }
	
	public function verifierSiDejaNotifier($idCommande,$idClient)
	{
		$sql = "select sms ";
        $from = " from Back\DashBundle\Entity\NotificationSms as sms,";
        $where = " where sms.commande =" . $idCommande . " and";
		$where .= "  sms.client =".$idClient." and";

        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where;
        $qb = $this->getEntityManager()->createQuery($query);
        //echo $qb->getSQL(); exit;
        return count($qb->getResult()) ;
	}
	
    public function getNombreCommandeEnAttente($date,$partenaire,$deal)
    {
        $sql = "select cmd ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd,";
        $from .= "  Back\ContractBundle\Entity\Reference as ref,";
        $from .= "  Back\ContractBundle\Entity\Annexe as ann,";
        $from .= "  Back\ContractBundle\Entity\Protocol as pro,";
        $where = " where cmd.reference =ref.id and";
        $where .= "  ref.annexe =ann.id and";
        $where .= "  ann.protocol =pro.id and";
        $where .= "  cmd.etat =0 and";
        $where .= "  cmd.dcr <='".$date."%' and";
        if($partenaire)
            $where .= "  pro.user =".$partenaire." and";
        if($deal)
            $where .= "  cmd.deal =".$deal." and";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where . " group by cmd.id ";
        $qb = $this->getEntityManager()->createQuery($query);
        // echo $qb->getSQL(); exit;
        return count($qb->getResult()) ;
    }
    public function getNombreCommandeAnnuler($date,$partenaire,$deal)
    {
        $sql = "select cmd ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd,";
        $from .= "  Back\ContractBundle\Entity\Reference as ref,";
        $from .= "  Back\ContractBundle\Entity\Annexe as ann,";
        $from .= "  Back\ContractBundle\Entity\Protocol as pro,";
        $where = " where cmd.reference =ref.id and";
        $where .= "  ref.annexe =ann.id and";
        $where .= "  ann.protocol =pro.id and";
        $where .= "  cmd.etat =3 and";
        $where .= "  cmd.dcr <='".$date."%' and";
        if($partenaire)
            $where .= "  pro.user =".$partenaire." and";
        if($deal)
            $where .= "  cmd.deal =".$deal." and";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where . " group by cmd.id ";
        $qb = $this->getEntityManager()->createQuery($query);
        // echo $qb->getSQL(); exit;
        return  count($qb->getResult()) ;
    }
    public function findforJson($deal, $dt, $dt2 = null)
    {
        if ($dt2 == null) {
            $qb = $this->createQueryBuilder('c')
                ->Where("c.dpa <='" . $dt->format('Y-m-d') . " 23:59:59'")
                ->andWhere("c.dpa >='" . $dt->format('Y-m-d') . " 00:00:00'")
                ->andWhere("c.etat =1")
                ->andWhere("c.deal=" . $deal->getId());
        } else {
            $qb = $this->createQueryBuilder('c')
                ->andWhere("c.dpa >='" . $dt->format('Y-m-d') . " 00:00:00'")
                ->andWhere("c.dpa <='" . $dt2->format('Y-m-d') . " 23:59:59'")
                ->andWhere("c.etat =1")
                ->andWhere("c.deal=" . $deal->getId());
        }



        return $qb->getQuery()->getResult();
    }

    public function getListSuiviCmd($data, $type)
    {

        $sql = "select cmd ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd,";
        $where = " where (1=1) and";

        if (isset($data['etat'])) {
            $where .= " cmd.etat =" . $data['etat'] . " and ";
        }

        if (isset($data['deal'])) {
            $where .= " cmd.deal =" . $data['deal'] . " and ";
        }
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where;
        $qb = $this->getEntityManager()->createQuery($query);
        return $qb->getResult();
    }

    public function getCommandPayedCoupon()
    {
        $sql = "select cmd ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd,";
        $where = " where ";
        $from .= "Back\CommandeBundle\Entity\Coupon as cop ";
        $where .= " cmd.id=cop.command and cop.vendu=2  ";
        $query = $sql . $from . $where . " group by cmd.id order by cmd.id DESC";
        $qb = $this->getEntityManager()->createQuery($query);
        //echo $qb->getSQL();exit;
        return $qb->getResult();
    }

    public function getCountCommandePaye($idDeal)
    {
        $sql = "select count(cmd) ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd";
        $where = " where cmd.etat = 1 ";
        $where .= " and  cmd.client = " . $idDeal;
        $query = $sql . $from . $where;
        $qb = $this->getEntityManager()->createQuery($query);
        //echo $qb->getSQL();exit;
        return $qb->getResult()[0];
    }

    public function getCountCommandeLivr()
    {
        $sql = "select count(cmd) ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd";
        $where = " where cmd.etat = 2 ";
        $query = $sql . $from . $where;
        $qb = $this->getEntityManager()->createQuery($query);
        //echo $qb->getSQL();exit;
        return $qb->getResult()[0];
    }

    public function getCountCommande($data)
    {
        $sql = "select count(cmd) ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd ";
        $where = " where (1=1) and";
        if (isset($data['id'])){
            $where .= " cmd.id LIKE '%" .$data['id']. "%' and ";
        }
        if (isset($data['dpaf'])) {
            $dpaf = Tools::reformatDate($data['dpaf']);
            $where .= " cmd.dcr >='" . $dpaf->format('Y-m-d') . " 00:00:00" . "' and ";
        }
        if (isset($data['dpat'])) {
            $dpat = Tools::reformatDate($data['dpat']);
            $where .= " cmd.dcr <='" . $dpat->format('Y-m-d') . " 23:59:59" . "' and ";
        }
        if (isset($data['dpafp'])) {
            $dpaf = Tools::reformatDate($data['dpafp']);
            $where .= " cmd.dpa >='" . $dpaf->format('Y-m-d') . " 00:00:00" . "' and ";
        }
        if (isset($data['dpatp'])) {
            $dpat = Tools::reformatDate($data['dpatp']);
            $where .= " cmd.dpa <='" . $dpat->format('Y-m-d') . " 23:59:59" . "' and ";
        }
        if (isset($data['etat'])) {
            $where .= " cmd.etat =" . $data['etat'] . " and ";
        }

        if (isset($data['vadd'])) {
            if ($data['vadd'] == 0)
                $where .= " cmd.user is null and ";
            else
                $where .= " cmd.user is not null and ";
        }
        if (isset($data['deal'])) {
            $where .= " cmd.deal =" . $data['deal'] . " and ";
        }
        if (isset($data['name']) || isset($data['fname']) || isset($data['emailc']) || isset($data['cincc']) || isset($data['telc'])) {
            $from .= ",Back\CommandeBundle\Entity\Client as cli,";
            $where .= " cmd.client=cli.id and ";
            if(isset($data['name']))
            {
                $where .= " cli.name  like '%" . $data['name'] . "%' and ";
            }
            if(isset($data['fname']))
            {

                $where .= " cli.fname  like '%" . $data['fname'] . "%' and ";

            }
            if (isset($data['emailc'])) {
                $where .= " cli.email  like '%" . $data['emailc'] . "%' and ";
            }
            if (isset($data['cincc'])) {
                $where .= " cli.cin  like '%" . $data['cincc'] . "%' and ";
            }
            if (isset($data['telc'])) {
                $where .= " cli.phone  like '" . $data['telc'] . "' and ";
            }

        }
        if (isset($data['numcoupon'])) {
            $from .= "Back\CommandeBundle\Entity\Coupon as cop,";
            $where .= " cmd.id=cop.command and cop.code='" . $data['numcoupon'] . "' and ";

        }
        if (isset($data['nom_porteur_cheque']) || isset($data['num_cheque'])) {
            $from .= "Back\CommandeBundle\Entity\Operation as ope,";
            $where .= " cmd.id=ope.commande and ";
            if (isset($data['nom_porteur_cheque'])) {
                $where .= " ope.id  = '" . $data['nom_porteur_cheque'] . "' and ";
            }
            if (isset($data['num_cheque'])) {
                $where .= " ope.numCheque  like '%" . $data['num_cheque'] . "%' and ";
            }


        }
        if (isset($data['paypar'])) {
            $where .= " cmd.caisse  = " . $data['paypar'] . " and ";
        }
        if (isset($data['user'])) {
            $where .= " cmd.user  = " . $data['user'] . " and ";
        }
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where;
        $qb = $this->getEntityManager()->createQuery($query);
        //echo $qb->getSQL();exit;
        return $qb->getResult()[0];
    }

    public function getCountCommandeNonPaye($idDeal)
    {
        $sql = "select count(cmd) ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd";
        $where = " where cmd.etat = 0 ";
        $where .= " and  cmd.client = " . $idDeal;
        $query = $sql . $from . $where;
        $qb = $this->getEntityManager()->createQuery($query);
        //echo $qb->getSQL();exit;
        return $qb->getResult()[0];
    }

    public function getListCmd($data,$page, $nbPerPage)
    {


        $sql = "select cmd ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd,";
        $where = " where (1=1) and";
        if (isset($data['id'])){
            $where .= " cmd.id LIKE '%" .$data['id']. "%' and ";
        }
        if (isset($data['dpaf'])) {
            $dpaf = Tools::reformatDate($data['dpaf']);
            $where .= " cmd.dcr >='" . $dpaf->format('Y-m-d') . " 00:00:00" . "' and ";
        }
        if (isset($data['dpat'])) {
            $dpat = Tools::reformatDate($data['dpat']);
            $where .= " cmd.dcr <='" . $dpat->format('Y-m-d') . " 23:59:59" . "' and ";
        }
        if (isset($data['dpafp'])) {
            $dpaf = Tools::reformatDate($data['dpafp']);
            $where .= " cmd.dpa >='" . $dpaf->format('Y-m-d') . " 00:00:00" . "' and ";
        }
        if (isset($data['dpatp'])) {
            $dpat = Tools::reformatDate($data['dpatp']);
            $where .= " cmd.dpa <='" . $dpat->format('Y-m-d') . " 23:59:59" . "' and ";
        }
        if (isset($data['etat'])) {
            $where .= " cmd.etat =" . $data['etat'] . " and ";
        }

        if (isset($data['vadd'])) {
            if ($data['vadd'] == 0)
                $where .= " cmd.user is null and ";
            else
                $where .= " cmd.user is not null and ";
        }
        if (isset($data['deal'])) {
            $where .= " cmd.deal =" . $data['deal'] . " and ";
        }
        if (isset($data['name']) || isset($data['fname']) || isset($data['emailc']) || isset($data['cincc']) || isset($data['telc'])) {
            $from .= "Back\CommandeBundle\Entity\Client as cli,";
            $where .= " cmd.client=cli.id and ";
            if(isset($data['name']))
            {
                $where .= " cli.name  like '%" . $data['name'] . "%' and ";
            }
            if(isset($data['fname']))
            {

                $where .= " cli.fname  like '%" . $data['fname'] . "%' and ";

            }
            if (isset($data['emailc'])) {
                $where .= " cli.email  like '%" . $data['emailc'] . "%' and ";
            }
            if (isset($data['cincc'])) {
                $where .= " cli.cin  like '%" . $data['cincc'] . "%' and ";
            }
            if (isset($data['telc'])) {
                $where .= " cli.phone  like '" . $data['telc'] . "' and ";
            }

        }
        if (isset($data['numcoupon'])) {
            $from .= "Back\CommandeBundle\Entity\Coupon as cop,";
            $where .= " cmd.id=cop.command and cop.code='" . $data['numcoupon'] . "' and ";

        }
        if (isset($data['nom_porteur_cheque']) || isset($data['num_cheque'])) {
            $from .= "Back\CommandeBundle\Entity\Operation as ope,";
            $where .= " cmd.id=ope.commande and ";
            if (isset($data['nom_porteur_cheque'])) {
                $where .= " ope.id  = '" . $data['nom_porteur_cheque'] . "' and ";
            }
            if (isset($data['num_cheque'])) {
                $where .= " ope.numCheque  like '%" . $data['num_cheque'] . "%' and ";
            }


        }
        if (isset($data['paypar'])) {
            $where .= " cmd.caisse  = " . $data['paypar'] . " and ";
        }
        if (isset($data['user'])) {
            $where .= " cmd.user  = " . $data['user'] . " and ";
        }
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where . " group by cmd.id order by cmd.id DESC
          ";
        $qb = $this->getEntityManager()->createQuery($query)
        // On définit l'annonce à partir de laquelle commencer la liste
        ->setFirstResult(($page-1) * $nbPerPage)
        // Ainsi que le nombre d'annonce à afficher sur une page
        ->setMaxResults($nbPerPage);
         //echo $qb->getSQL(); exit;
        return $qb->getResult();



    }


    public function getListLivrCmd($data)
    {
        $sql = "select cmd ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd,";
        $where = " where (1=1) and";
        if (isset($data['id'])){
            $where .= " cmd.id LIKE '%" .$data['id']. "%' and ";
        }
        if (isset($data['dpaf'])) {
            $dpaf = Tools::reformatDate($data['dpaf']);
            $where .= " cmd.dcr >='" . $dpaf->format('Y-m-d') . " 00:00:00" . "' and ";
        }
        if (isset($data['dpat'])) {
            $dpat = Tools::reformatDate($data['dpat']);
            $where .= " cmd.dcr <='" . $dpat->format('Y-m-d') . " 23:59:59" . "' and ";
        }
        if (isset($data['dpafp'])) {
            $dpaf = Tools::reformatDate($data['dpafp']);
            $where .= " cmd.dpa >='" . $dpaf->format('Y-m-d') . " 00:00:00" . "' and ";
        }
        if (isset($data['dpatp'])) {
            $dpat = Tools::reformatDate($data['dpatp']);
            $where .= " cmd.dpa <='" . $dpat->format('Y-m-d') . " 23:59:59" . "' and ";
        }

        $where .= " cmd.etat =" . 4 . " or ";
        $where .= " cmd.etat =" . 2 . " and ";

        $where .= " cmd.id > 40000 and ";

        if (isset($data['vadd'])) {
            if ($data['vadd'] == 0)
                $where .= " cmd.user is null and ";
            else
                $where .= " cmd.user is not null and ";
        }
        if (isset($data['deal'])) {
            $where .= " cmd.deal =" . $data['deal'] . " and ";
        }
        if (isset($data['name']) || isset($data['fname']) || isset($data['emailc']) || isset($data['cincc']) || isset($data['telc'])) {
            $from .= "Back\CommandeBundle\Entity\Client as cli,";
            $where .= " cmd.client=cli.id and ";
            if(isset($data['name']))
            {

                $where .= " cli.name  like '%" . $data['name'] . "%' and ";

            }
            if(isset($data['fname']))
            {

                $where .= " cli.fname  like '%" . $data['fname'] . "%' and ";

            }
            if (isset($data['emailc'])) {
                $where .= " cli.email  like '%" . $data['emailc'] . "%' and ";
            }
            if (isset($data['cincc'])) {
                $where .= " cli.cin  like '%" . $data['cincc'] . "%' and ";
            }
            if (isset($data['telc'])) {
                $where .= " cli.phone  like '" . $data['telc'] . "' and ";
            }


        }
        if (isset($data['numcoupon'])) {
            $from .= "Back\CommandeBundle\Entity\Coupon as cop,";
            $where .= " cmd.id=cop.command and cop.code='" . $data['numcoupon'] . "' and ";

        }
        if (isset($data['nom_porteur_cheque']) || isset($data['num_cheque'])) {
            $from .= "Back\CommandeBundle\Entity\Operation as ope,";
            $where .= " cmd.id=ope.commande and ";
            if (isset($data['nom_porteur_cheque'])) {
                $where .= " ope.id  = '" . $data['nom_porteur_cheque'] . "' and ";
            }
            if (isset($data['num_cheque'])) {
                $where .= " ope.numCheque  like '%" . $data['num_cheque'] . "%' and ";
            }


        }
        if (isset($data['paypar'])) {
            $where .= " cmd.caisse  = " . $data['paypar'] . " and ";
        }

        //$where .= " cmd.caisse  = 26 and ";

        if (isset($data['user'])) {
            $where .= " cmd.user  = " . $data['user'] . " and ";
        }
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where . " group by cmd.id order by cmd.id DESC
          ";
        $qb = $this->getEntityManager()->createQuery($query);
        //echo $qb->getSQL(); exit;
        return $qb->getResult();
    }


    public function getUneCommande($dateD,$dateF)
    {
        $sql = "select count(cmd) as nombre ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd,";
        $where = " where cmd.etat=1 and";
        $where .= " cmd.dcr >  '" . $dateD . "' and";
        $where .= " cmd.dcr <  '" . $dateF . "'";
        $where .= " group by cmd.client having count(cmd) = 1  and";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where;
        $qb = $this->getEntityManager()->createQuery($query);
        $result = count($qb->getResult());
        return $result;
    }

    public function getClientUneCommande($dateD,$dateF)
    {
        $sql = "select cli ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd,";
        $from .= " Back\CommandeBundle\Entity\Client as cli,";
        $where = " where cmd.etat=1 and";
        $where .= " cmd.client=cli.id and";
        $where .= " cmd.dcr >  '" . $dateD . "' and";
        $where .= " cmd.dcr <  '" . $dateF . "'";
        $where .= " group by cmd.client having count(cmd) = 1  and";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where;
        $qb = $this->getEntityManager()->createQuery($query);
        $result = $qb->getResult();
        return $result;
    }




    public function getPlusCinqCommande($dateD,$dateF)
    {
        $sql = "select count(cmd) as nombre ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd,";
        $where = " where cmd.etat=1 and";
        $where .= " cmd.dcr >  '" . $dateD . "' and";
        $where .= " cmd.dcr <  '" . $dateF . "'";
        $where .= " group by cmd.client having count(cmd) >= 5  and";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where;
        $qb = $this->getEntityManager()->createQuery($query);
        $result = count($qb->getResult());
        return $result;
    }

    public function getClientPlusCinqCommande($dateD,$dateF)
    {
        $sql = "select cli ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd,";
        $from .= " Back\CommandeBundle\Entity\Client as cli,";
        $where = " where cmd.etat=1 and";
        $where .= " cmd.client=cli.id and";
        $where .= " cmd.dcr >  '" . $dateD . "' and";
        $where .= " cmd.dcr <  '" . $dateF . "'";
        $where .= " group by cmd.client having count(cmd) >= 5  and";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where;
        $qb = $this->getEntityManager()->createQuery($query);
        $result = $qb->getResult();
        return $result;
    }




    public function getMoinsCinqCommande($dateD,$dateF)
    {
        $sql = "select count(cmd) as nombre ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd,";
        $where = " where cmd.etat=1 and";
        $where .= " cmd.dcr >  '" . $dateD . "' and";
        $where .= " cmd.dcr <  '" . $dateF . "'";
        $where .= " group by cmd.client having count(cmd) < 5  and";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where;
        $qb = $this->getEntityManager()->createQuery($query);
        $result = count($qb->getResult());
        return $result;
    }


    public function getClientMoinsCinqCommande($dateD,$dateF)
    {
        $sql = "select cli ";
        $from = " from Back\CommandeBundle\Entity\Command as cmd,";
        $from .= " Back\CommandeBundle\Entity\Client as cli,";
        $where = " where cmd.etat=1 and";
        $where .= " cmd.client=cli.id and";
        $where .= " cmd.dcr >  '" . $dateD . "' and";
        $where .= " cmd.dcr <  '" . $dateF . "'";
        $where .= " group by cmd.client having count(cmd) < 5 and count(cmd) > 1  and";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where;
        $qb = $this->getEntityManager()->createQuery($query);
        $result = $qb->getResult();
        return $result;
    }


}
