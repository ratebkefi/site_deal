<?php

namespace Main\BookingBundle\Entity;
use Doctrine\ORM\EntityRepository;

/**
 * BookingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BookingRepository extends EntityRepository
{
    public function evenement($date)
    {

        $sql = "select boo ";
        $from = " from  Main\BookingBundle\Entity\Booking as boo ";
        $where = " where boo.booking   =  '" . $date . "' and ";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where ;
        $qb = $this->getEntityManager()->createQuery($query);
        return $qb->getResult();
    }
	
	public function CapacityPerHour($deal)
	{
	$sql = "select sche ";
        $from = " from  Back\PartnerBundle\Entity\Schedule as sche ,";
        $from .= "  Back\DealBundle\Entity\Deal as lea ,";
        $from .= "  Back\PlanningBundle\Entity\Planning as plan ,";
        $from .= "  Back\ContractBundle\Entity\Annexe as ann ,";
        $from .= "  Back\ContractBundle\Entity\Protocol as pro ,";
        $from .= "  Back\PartnerBundle\Entity\SellingPoint as sel ,";
        $from .= "  User\UserBundle\Entity\User as us ";


        $where = " where plan.id   =  lea.planning and ";
        $where .= " plan.defaultannexe  =  ann.id  and ";
        $where .= " ann.protocol  =   pro.id  and ";
        $where .= "  us.id   =  pro.user and ";
        $where .= " us.id  =  sel.user   and ";
        $where .= " sel.id  =  sche.sellingpoint   and ";
        //Add id point de vente
        //$where .= " Sch.sellingpoint  =  sche.id   and ";
        $where .= " lea.id  =  " . $deal . "   and ";

        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where ;
        $qb = $this->getEntityManager()->createQuery($query);
        return $qb->getResult();
	}
    public function Dispo($date,$deal)
    {
        $sql = "select sche ";
        $from = " from  Back\PartnerBundle\Entity\Schedule as sche ,";
        $from .= "  Back\DealBundle\Entity\Deal as lea ,";
        $from .= "  Back\PlanningBundle\Entity\Planning as plan ,";
        $from .= "  Back\ContractBundle\Entity\Annexe as ann ,";
        $from .= "  Back\ContractBundle\Entity\Protocol as pro ,";
        $from .= "  Back\PartnerBundle\Entity\SellingPoint as sel ,";
        $from .= "  User\UserBundle\Entity\User as us ";


        $where = " where plan.id   =  lea.planning and ";
        $where .= " plan.defaultannexe  =  ann.id  and ";
        $where .= " ann.protocol  =   pro.id  and ";
        $where .= "  us.id   =  pro.user and ";
        $where .= " us.id  =  sel.user   and ";
        $where .= " sel.id  =  sche.sellingpoint   and ";
        //Add id point de vente
        //$where .= " Sch.sellingpoint  =  sche.id   and ";
        $where .= " lea.id  =  " . $deal . "   and ";
        $where .= " sche.day  =  '" . $date . "'   and ";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where ;
        $qb = $this->getEntityManager()->createQuery($query);
        return $qb->getResult();
    }
    public function dispoDate($deal,$date)
    {
        $sql = "select lea ";
        $from = " FROM  Back\DealBundle\Entity\Deal as lea ";
        $where = " where lea.id   =   " . $deal . " and ";
        $where .= " lea.startDateValidtyCoupon <=  '" . $date . "'   and ";
        $where .= " lea.endDateValidtyCoupon  >=  '" . $date . "'   and ";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where ;
        $qb = $this->getEntityManager()->createQuery($query);

        return $qb->getResult();

    }
    public function horaire($deal)
    {
        $sql = "select sche ";
        $from = " from  Back\PartnerBundle\Entity\Schedule as sche ,";
        $from .= "  Back\DealBundle\Entity\Deal as lea ,";
        $from .= "  Back\PlanningBundle\Entity\Planning as plan ,";
        $from .= "  Back\ContractBundle\Entity\Annexe as ann ,";
        $from .= "  Back\ContractBundle\Entity\Protocol as pro ,";
        $from .= "  Back\PartnerBundle\Entity\SellingPoint as sel ,";
        $from .= "  User\UserBundle\Entity\User as us ";


        $where = " where plan.id   =  lea.planning and ";
        $where .= " plan.defaultannexe  =  ann.id  and ";
        $where .= " ann.protocol  =   pro.id  and ";
        $where .= "  us.id   =  pro.user and ";
        $where .= " us.id  =  sel.user   and ";
        $where .= " sel.id  =  sche.sellingpoint   and ";
        $where .= " lea.id  =  " . $deal . "   and ";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
         $query = $sql . $from . $where ;
        $qb = $this->getEntityManager()->createQuery($query);
        //Tools::dump($data,true);

        return $qb->getResult();
    }

    public function disponibilite($codeCoupon)
    {

        $Now = new \dateTime();
        $sql = "select dea ";
        $from = " from Back\CommandeBundle\Entity\Command as com,";
        $from .= "  Back\CommandeBundle\Entity\Coupon as coup,";
        $from .= "  Back\DealBundle\Entity\Deal as dea,";
        $from .= "  Back\PlanningBundle\Entity\Planning as plan,";
        $from .= "  Back\ContractBundle\Entity\Annexe as ann,";
        $where = " where (1=1) and";
        $where .= " com.id  =  coup.command  and ";
        $where .= " com.deal  =  dea.id  and ";
        $where .= " dea.planning  =  plan.id  and ";
        $where .= "  ann.id =  plan.defaultannexe  and ";
        $where .= " coup.id  =  " . $codeCoupon . "   and ";
        $where .= " ann.booking  =  1   and ";
        //$where .= " dea.id  =  " . $codeCoupon . "   and ";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where;
        $qb = $this->getEntityManager()->createQuery($query);
		//echo $qb->getSQL();exit;
        //Tools::dump($data,true);

        return $qb->getResult();
    }
    public function disponibiliteByDeal($deal)
    {


        $sql = "select dea ";
        $from = " From  Back\DealBundle\Entity\Deal as dea,";
        $from .= "  Back\PlanningBundle\Entity\Planning as plan,";
        $from .= "  Back\ContractBundle\Entity\Annexe as ann,";
        $where = " where (1=1) and";
        $where .= " dea.planning  =  plan.id  and ";
        $where .= " plan.defaultannexe  =  ann.id  and ";
        $where .= " dea.id  =  " . $deal . "   and ";
        $where .= " ann.booking  =  1   and ";
        //$where .= " dea.id  =  " . $codeCoupon . "   and ";
        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where;
        $qb = $this->getEntityManager()->createQuery($query);
        //Tools::dump($data,true);

        return $qb->getResult();
    }
}
